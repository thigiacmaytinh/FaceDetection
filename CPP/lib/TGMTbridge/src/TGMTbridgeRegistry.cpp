#include "TGMTbridgeRegistry.h"
#include "TGMTbridge.h"

using namespace TGMT;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TGMTbridgeRegistry::TGMTbridgeRegistry() : mRegKey()
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::Init(String^ regKey)
{
	mRegKey = Registry::CurrentUser->OpenSubKey("SOFTWARE\\" + regKey, true);
	if (mRegKey == nullptr)
	{
		Registry::CurrentUser->OpenSubKey("SOFTWARE", true)->CreateSubKey(regKey);
		mRegKey = Registry::CurrentUser->OpenSubKey("SOFTWARE\\" + regKey, true);
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::Init(std::string regKey)
{
	Init(TGMT::TGMTbridge::stdStrToSystemStr(regKey));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(System::String^ value, bool valueData)
{
	mRegKey->SetValue(value, valueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(std::string value, bool valueData)
{
	WriteValue(TGMTbridge::stdStrToSystemStr( value), valueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(System::String^ value, System::String^ valueData)
{
	mRegKey->SetValue(value, valueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(std::string value, std::string valueData)
{
	WriteValue(TGMTbridge::stdStrToSystemStr(value), TGMTbridge::stdStrToSystemStr(valueData));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(System::String^ value, int valueData)
{
	mRegKey->SetValue(value, valueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void TGMTbridgeRegistry::WriteValue(std::string value, int valueData)
{
	WriteValue(TGMTbridge::stdStrToSystemStr(value), valueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

String^ TGMTbridgeRegistry::ReadValueString(System::String^ key,  System::String^ defaultValue)
{
	Object^ value = (System::String^)mRegKey->GetValue(key);
	if (value == nullptr)
		return defaultValue;

	return (System::String^)value;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::string TGMTbridgeRegistry::ReadValueString(std::string key, std::string defaultValue)
{	
	System::String^ sDefaultValue = TGMTbridge::stdStrToSystemStr(defaultValue);
	System::String^ sValueData = ReadValueString(TGMTbridge::stdStrToSystemStr(key), sDefaultValue);

	return TGMTbridge::SystemStr2stdStr(sValueData);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int TGMTbridgeRegistry::ReadValueInt(System::String^ key, int defaultValue)
{
	Object^ value = mRegKey->GetValue(key);
	if (value == nullptr)
		return defaultValue;

	return (int)value;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int TGMTbridgeRegistry::ReadValueInt(std::string key, int defaultValue)
{
	System::String^ sKey = TGMTbridge::stdStrToSystemStr(key);
	return ReadValueInt(sKey, defaultValue);
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool TGMTbridgeRegistry::ReadValueBool(System::String^ key, bool defaultValue)
{
	Object^ value = mRegKey->GetValue(key);
	if (value == nullptr)
		return defaultValue;

	return (String^)value == "True";
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

bool TGMTbridgeRegistry::ReadValueBool(std::string key, bool defaultValue)
{
	System::String^ sKey = TGMTbridge::stdStrToSystemStr(key);
	return ReadValueBool(sKey, defaultValue);
}